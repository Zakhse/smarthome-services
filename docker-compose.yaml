version: "2.4"

volumes:
  mosquitto:
  portainer_data:

x-base-environment: &base-envs
  TZ: ${TZ:-Europe/Moscow}
  HOSTNAME: ${HOSTNAME:-smarthome-gateway}

services:
  mosquitto:
    image: eclipse-mosquitto
    ports:
      - 1883:1883
      - 9001:9001
    environment:
      <<: *base-envs
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto_passwd:/mosquitto/config/passwd
      - mosquitto:/mosquitto
    network_mode: "host"
    restart: unless-stopped
  backuper:
    user: ${BACKUPER_USER:-}
    build:
      context: ./backuper/image
    environment:
      <<: *base-envs
      ARCHIVE_PASSWORD: ${BACKUP_ARCHIVE_PASSWORD?BACKUP_ARCHIVE_PASSWORD is unset}
      BACKUP_DESTINATIONS: ${BACKUP_DESTINATIONS:?BACKUP_DESTINATIONS is unset or empty}
      CRON_EXPRESSION: ${CRON_EXPRESSION:-0 */6 * * *}
      NUMBER_OF_LAST_BACKUPS: ${NUMBER_OF_LAST_BACKUPS:-3}
    volumes:
      - ./rclone.conf:/config/rclone.conf
      - ./:/data
    restart: unless-stopped
  node-red:
    image: nodered/node-red:${NODE_RED_IMAGE}
    ports:
      - 1880:1880
    environment:
      <<: *base-envs
      NODE_RED_IMAGE: ${NODE_RED_IMAGE:?NODE_RED_IMAGE is unset or empty}
    volumes:
      - ./node-red/data:/data
      - type: bind
        source: ./node-red/settings.js
        target: /data/settings.js
    restart: unless-stopped
  cec:
    build:
      context: https://github.com/michaelarnauts/cec-mqtt-bridge.git
    devices:
      - "/dev/mem:/dev/mem"
      - "/dev/vchiq:/dev/vchiq"
    environment:
      <<: *base-envs
    volumes:
      - type: bind
        source: ./cec/config.ini
        target: /usr/src/app/config.ini
    restart: unless-stopped
    privileged: true
  samba:
    user: ${SAMBA_USER:-}
    image: dperson/samba:${SAMBA_IMAGE_TAG:-latest}
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139/tcp"
      - "445:445/tcp"
    mem_limit: ${SAMBA_MEMORY_LIMIT:-200M}
    env_file:
    - samba.env
    environment:
      <<: *base-envs
      PERMISSIONS: "true"
    read_only: true
    stdin_open: true
    tty: true
    tmpfs:
      - /tmp
    volumes:
      - ./:/mnt:z
    restart: unless-stopped
  hass:
    image: homeassistant/${HASS_IMAGE:-home-assistant}
    volumes:
      - ./hass/config:/config
    environment:
      <<: *base-envs
    restart: unless-stopped
    network_mode: host
  zigbee:
    build:
      context: ./zigbee
      args:
        VERSION: ${ZIGBEE_IMAGE_TAG:-latest}
    volumes:
      - ./zigbee/data:/app/data
      - /run/udev:/run/udev:ro
    devices:
      - ${ZIGBEE_DEVICE:-/dev/ttyACM0}:/dev/ttyACM0
    environment:
      <<: *base-envs
      MQTT_SERVER: ${ZIGBEE_MQTT_SERVER:?ZIGBEE_MQTT_SERVER is not set}
      MQTT_PORT: ${ZIGBEE_MQTT_PORT:-1883}
      MQTT_SECURE: ${ZIGBEE_MQTT_SECURE:-false}
      MQTT_USER: ${ZIGBEE_MQTT_USER:?ZIGBEE_MQTT_USER is not set}
      MQTT_PASSWORD: ${ZIGBEE_MQTT_PASSWORD:?ZIGBEE_MQTT_PASSWORD is not set}
      NETWORK_KEY: ${ZIGBEE_NETWORK_KEY:?ZIGBEE_NETWORK_KEY is not set}
    network_mode: host
    privileged: true
    restart: unless-stopped
  zigbee-assistant:
    image: carldebilly/zigbee2mqttassistant:${ZIGBEE_ASSISTANT_IMAGE_TAG:-latest}
    ports:
      - "${ZIGBEE_ASSISTANT_PORT:-8080}:80"
    environment:
      <<: *base-envs
      Z2MA_SETTINGS__MQTTSERVER: ${ZIGBEE_MQTT_SERVER}
      Z2MA_SETTINGS__MQTTPORT: ${ZIGBEE_MQTT_PORT:-1883}
      Z2MA_SETTINGS__MQTTSECURE: ${ZIGBEE_MQTT_SECURE:-false}
      Z2MA_SETTINGS__MQTTUSERNAME: ${ZIGBEE_MQTT_USER}
      Z2MA_SETTINGS__MQTTPASSWORD: ${ZIGBEE_MQTT_PASSWORD}
    restart: unless-stopped
  portainer:
    image: portainer/portainer:${PORTAINER_IMAGE:-latest}
    command: -H unix:///var/run/docker.sock
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9000:9000
    environment:
      <<: *base-envs
    restart: unless-stopped
